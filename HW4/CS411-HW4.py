#%%
from random import randint
from math import gcd,ceil
from RSA_Oracle_client import RSA_Oracle_Checker, RSA_Oracle_Query, modinv
from RSA_OAEP import RSA_OAEP_Enc
from ElGamal import Dec, Key_Gen, Enc

def Q1():
    C = 2334539312043195033680018437955622420283014803586574325128611490713594248849616840690509029357891765439929831299871885384601698443410976461367175663612107008543663194270706612093559659931260379880899558721650098522678848834607706862435679439185055980402949518864225002257865432356582530407091559778995217519267210761610794998579401710556443038397820884760921684245351808291006403248863200790904977040918560785390230325879078532594071218445387551410809367890454982647736701702819587691703743505274796583521513398708721879571273024936865697997476462100426583225326307385938872125047105284087735351216633489998654174580
    N = 16939269462313198277725089002524968140769895904731797247921693446825361577176513265093962001473249149493514478809355121972226854971742591412020947781343582572258409348854687792672350790838706795045105779549770778632847428289027972956461589642862664604406205649788062899700494060455208957227204718515101331592572887762868780071870612248382350488623041960895952847347193036811161635348404536654480418700288618890111185617389009319953809419282210422869145631879305871459779170673590029863798266603861263916454445940018625253525716638055179599474296505004768081393212277916373461197482274715508530005125354616487101316387
    E = 65537

    while True:
        CHOSEN_M = randint(2,N)
        if gcd(CHOSEN_M,N) == 1:
            INV_CHOSEN_M = modinv(CHOSEN_M, N)
            break
    
    CHOSEN_C = pow(CHOSEN_M,E,N)
    CHOSEN_D = RSA_Oracle_Query(CHOSEN_C*C)

    M = (CHOSEN_D*INV_CHOSEN_M)%N
    byte_result = M.to_bytes(ceil(M.bit_length()/8), byteorder='big')
    message = byte_result.decode()
    print(f"The message is \"{message}\"\nChecking from server:")
    RSA_Oracle_Checker(message)

def Q2():
    C = 10874572375620617789377153154263475798901864318895755165739361956409713948425
    N = 39011863995815647013266848060295512705184137160777355248310252490843225091289
    E = 65537
    
    for R in range((2**8)-1): # R is any number up to 8 bits
        for M in range(10000): # M is any 4 digit number
            temp_cipher = RSA_OAEP_Enc(M, E, N, R)
            if temp_cipher == C:
                print(f"The pin is found as {M}, for the R value {R}.")
                break

def Q3():
    Q = 1267563829357910721192610532349240957905695824701
    P = 154474724567024505552326668667624254530346668891516550168600112845390987269072109602304547293643022259327026218001120791870575104603071951983783939178506546068762532687120696273925570767784225223472959435756693935028851519062765262076784037127804385249530791458749773813851085918817576722179601544649985814629
    G = 103909996904124632993131371858766165669729607982465958461739488117164223912656915892337662801494883198703452648194921406170215661998544589380930634851778368778250267832833231632014974502522850108470857947473599059781490699897828182798112413851433613933100792383641135076229528835761463113619032894070860192807
    M1,R1,T1 = b'This is my last message to you', 138463133012013282634913641892758158801762848592172407698472135927781184457014021159308423563284158903125454277831143312262376170389801812594838453962655356699229091103625269373494506043148105103719155747470849279981239429070325302155209235130687521331639091969580507394146320441457615197051837733672345300228, 106265595589369404671099487302170469354962925840925742209713793365234534431026758828912055935037813410518539768824133366973085636520219854456990152125504837648179032393648480733938344778228349463627323405812952123710763683733706558368525987706254967419548469786325235631013665472833542539156237682564045597699
    R2, T2 = 138463133012013282634913641892758158801762848592172407698472135927781184457014021159308423563284158903125454277831143312262376170389801812594838453962655356699229091103625269373494506043148105103719155747470849279981239429070325302155209235130687521331639091969580507394146320441457615197051837733672345300228, 135563059487582975121566088062898494475175255003560071628710046462630442262636134689239784950989051760061880686659805280094257722717904505303535034697677080651092788318486681967488775262340037022020363930212423666424280959617684767562766700269012486352837430312759302045630777452835207236487134484258912710865

if __name__ == '__main__':
    Q3()